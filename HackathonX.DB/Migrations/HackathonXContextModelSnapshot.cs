// <auto-generated />
using System;
using HackathonX.DB.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HackathonX.DB.Migrations
{
    [DbContext(typeof(HackathonXContext))]
    partial class HackathonXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HackathonX.DB.Model.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("HackathonX.DB.Model.Leaderboard", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 28, 20, 19, 33, 467, DateTimeKind.Local).AddTicks(6771));

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "Timestamp")
                        .HasName("PK_Leaderboard_1");

                    b.ToTable("Leaderboard", (string)null);
                });

            modelBuilder.Entity("HackathonX.DB.Model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("HackathonX.DB.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HackathonX.DB.Model.Answer", b =>
                {
                    b.HasOne("HackathonX.DB.Model.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_Answers_Questions");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("HackathonX.DB.Model.Leaderboard", b =>
                {
                    b.HasOne("HackathonX.DB.Model.User", "User")
                        .WithMany("Leaderboards")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Leaderboard_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HackathonX.DB.Model.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("HackathonX.DB.Model.User", b =>
                {
                    b.Navigation("Leaderboards");
                });
#pragma warning restore 612, 618
        }
    }
}
