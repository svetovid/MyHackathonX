@using HackathonX.Service

@if (CurrentQuestion == null)
{
  <div class="empty-questionnaire">Click on a puzzle cell</div>
}
else
{
  <EditForm Model="@CurrentQuestion" OnValidSubmit="@AnswerTheQuestion">
    <div class="form-group">
      <label>@CurrentQuestion.Text</label>
      <div class="form-control">
        <InputRadioGroup Name="questionOptions" id="userAnswerId" @bind-Value="CurrentQuestion.Useranswerid">
        @foreach(var ans in CurrentQuestion.Answers)
        {
            var _id = $"radio_{ans.Id}";
            <div>
              <InputRadio class="form-check-input" Value="@ans.Id" Name="questionOptions" id="@_id" />
              <label class="form-check-label label__inline" for="@_id">
                @ans.Text
              </label>
          </div>
        }
        </InputRadioGroup>
      </div>
    </div>
    <button class="btn btn-primary btn-next-question" type="submit" disabled="@(CurrentQuestion?.Answered)">Next</button>
  </EditForm>
}

@code {
  [Parameter] public Question? CurrentQuestion { get; set; }
  [Parameter] public EventCallback<Question?> AbsencePlanSubmitted { get; set; }

  private async Task AnswerTheQuestion()
  {
    await AbsencePlanSubmitted.InvokeAsync(CurrentQuestion);
  }
}
